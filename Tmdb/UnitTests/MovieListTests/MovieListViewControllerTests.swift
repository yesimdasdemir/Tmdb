//
//  MovieListViewControllerTests.swift
//  Tmdb
//
//  Created by Yeşim Daşdemir on 25.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Tmdb
import XCTest

final class MovieListViewControllerTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: MovieListViewController!
    var window: UIWindow!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        window = UIWindow()
        setupMovieListViewController()
    }
    
    override func tearDown() {
        window = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupMovieListViewController() {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "MovieList", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "MovieListViewController") as! MovieListViewController
    }
    
    func loadView() {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // MARK: Test doubles
    
    final class MovieListBusinessLogicSpy: MovieListBusinessLogic {
        
        var getMovieListCalled = false
        
        func getMovieList(pageNo: Int) {
            getMovieListCalled = true
        }
    }
    
    // MARK: Tests
    
    func testShouldDoSomethingWhenViewIsLoaded() {
        // Given
        let spy = MovieListBusinessLogicSpy()
        sut.interactor = spy
        
        // When
        loadView()
        
        // Then
    }
    
    
    func testViewDidLoad() {
        // Given
        let spy = MovieListBusinessLogicSpy()
        sut.interactor = spy
        
        // When
        sut.viewDidLoad()
        // Then
        XCTAssertNotNil(sut.collectionView)
        XCTAssert(spy.getMovieListCalled)
    }
    
    func testDisplayMovieList() {
        // Given
        let response = GetMovieList.MovieList.Response(page: 0, totalPages: 0, totalResults: 0, results: [MovieListItem(id: 123,
                                                                                                                        posterPath: "temp.png",
                                                                                                                        releaseDate: nil,
                                                                                                                        originalTitle: nil,
                                                                                                                        overview: nil,
                                                                                                                        title: nil,
                                                                                                                        voteAverage: nil,
                                                                                                                        voteCount: nil),
                                                                                                          MovieListItem(id: 123,
                                                                                                                        posterPath: "temp.png",
                                                                                                                        releaseDate: nil,
                                                                                                                        originalTitle: nil,
                                                                                                                        overview: nil,
                                                                                                                        title: nil,
                                                                                                                        voteAverage: nil,
                                                                                                                        voteCount: nil)])
        
        // When
        sut.displayMovieList(response: response)
        
        // Then
        XCTAssertNotNil(sut.collectionView.numberOfSections)
        XCTAssertEqual(sut.collectionView.numberOfItems(inSection: 0), 2)
    }
}
