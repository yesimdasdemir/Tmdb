//
//  MovieDetailInteractor.swift
//  Tmdb
//
//  Created by Yeşim Daşdemir on 21.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailBusinessLogic {
    func getMovieDetail()
    func getSelectedMovieId() -> Int
}

protocol MovieDetailDataStore {
    var selectedMovieId: Int { get set }
}

final class MovieDetailInteractor: MovieDetailBusinessLogic, MovieDetailDataStore {
    
    var presenter: MovieDetailPresentationLogic?
    var worker: MovieDetailWorker?
    
    var selectedMovieId: Int = 0
    
    // MARK: Methods
    
    func getMovieDetail() {
        let urlLink = "https://api.themoviedb.org/3/movie/\(selectedMovieId)" + "?language=en-US&api_key=fd2b04342048fa2d5f728561866ad52a"
        
        let url = URL(string: urlLink)
        
        let session = URLSession.shared
        
        if let url = url {
            let task = session.dataTask(with: url) { (data, response, error) in
                
                if error != nil {
                    debugPrint("Error, no data!")
                } else {
                    
                    if let data = data {
                        do {
                            let response = try JSONDecoder().decode(GetMovieDetail.MovieDetail.Response.self, from: data)
                            DispatchQueue.main.async { [weak self] in
                                debugPrint(response)
                                self?.presenter?.presentMovieDetail(response: response)
                            }
                        } catch  {
                            debugPrint(error)
                        }
                    }
                }
            }
            task.resume()
        }
    }
    
    func getSelectedMovieId() -> Int {
        return selectedMovieId
    }
}
