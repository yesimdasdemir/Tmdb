//
//  MovieDetailViewController.swift
//  Tmdb
//
//  Created by Yeşim Daşdemir on 21.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailDisplayLogic: class {
    func displayMovieDetail(viewModel: SimpleDetailViewModel)
}

final class MovieDetailViewController: UIViewController, MovieDetailDisplayLogic {
    var interactor: MovieDetailBusinessLogic?
    var router: (NSObjectProtocol & MovieDetailRoutingLogic & MovieDetailDataPassing)?
    
    @IBOutlet weak var tableView: UITableView!
    
    private var viewModel: SimpleDetailViewModel?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = MovieDetailInteractor()
        let presenter = MovieDetailPresenter()
        let router = MovieDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        navigationItem.title = "MovieDetail"
        navigationItem.rightBarButtonItem = UIBarButtonItem(barButtonSystemItem: .rewind,
                                                            target: self,
                                                            action: #selector(starButtonClicked))
        
        tableView.delegate = self
        tableView.dataSource = self
        
        interactor?.getMovieDetail()
        registerTableViewCells()
    }
        
    func displayMovieDetail(viewModel: SimpleDetailViewModel) {
        self.viewModel = viewModel
        tableView.reloadData()
    }
    
    @objc private func starButtonClicked() {
        
    }
    
    private func registerTableViewCells() {
        let cell = UINib(nibName: "SimpleDetailViewCell", bundle: nil)
        tableView.register(cell, forCellReuseIdentifier: "SimpleDetailViewCell")
    }
}

extension MovieDetailViewController: UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if let cell = tableView.dequeueReusableCell(withIdentifier: "SimpleDetailViewCell") as? SimpleDetailViewCell {
            cell.frame = CGRect(x: 0, y: 0, width: UIScreen.main.bounds.width, height: UIScreen.main.bounds.height)
            cell.simpleDetailView.viewModel = viewModel
            return cell
        }
       return UITableViewCell()
    }
}
